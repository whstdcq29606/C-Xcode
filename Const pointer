Two types of constant pointer:
One:
const type *p.
There are three reasons to define a constant pointer:
1.A const pointer is defined as "Const type *p". A const pointer can point to both unconstant variable and constant variable.
2.A ordinary pointer only can point to unconstant variable.
3.If we define a ficture which need to passed constant array, we need the const pointer.

Two:
Type *const p.
Type *const p is the pointer whose point can be unchangeable. 
But the value stored by the address pointed by *const p can be changeable.

Const type *p: EXAMPLES AND COMPRASION
double rates[5] = {88.99, 100.12, 59.45, 183.11, 340.5}; const double locked[4] = {0.08, 0.075, 0.0725, 0.07};
const double * pc = rates;// valid
pc = locked;// valid
pc = &rates[3];// valid

double rates[5] = {88.99, 100.12, 59.45, 183.11, 340.5}; const double locked[4] = {0.08, 0.075, 0.0725, 0.07};
double * pnc = rates;// valid
pnc = locked;// not valid 
pnc = &rates[3];// valid


Type * const p;
double rates[5] = {88.99, 100.12, 59.45, 183.11, 340.5};
double * const pc = rates;
pc = &rates[2];// not allowed
*pc = 92.99;// ok -- changes rates[0]





































              
